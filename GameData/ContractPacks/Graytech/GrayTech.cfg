// Credit to linuxgurugamer for his Unmanned and Grand Tour Contracts, which this is strongly based off.
// 
// License is CC BY-NC-SA 4.0
// https://creativecommons.org/licenses/by-nc-sa/4.0/

CONTRACT_GROUP
{
	name = GrayTech
	displayName = Grey Tech Missions
	agent = Gray Tech
	minVersion = 1.15.0
	maxSimultaneous = 30
	maxCompletions = 0
		
	DATA		
 	{
 		type = bool
		hidden = true
		requiredValue = false
		// Planetpack check, otherwise would just do IsMoon
 		homeIsMoon = HomeWorld().IsMoon() && HomeWorld().Children().Count() == 0 && !HomeWorld().Parent().IsSun()
 	}	

	DATA
	{

		name = OverideHome
		type = CelestialBody
		
		hidden = true
		requiredValue = false
		homeSun = HomeWorld().Parent().IsSun() ? HomeWorld().Parent() : HomeWorld().Parent().Parent()
 		homePlanet = @/homeIsMoon? HomeWorld().Parent() : HomeWorld()
	}
	DATA
	{

		type = double
		hidden = true
		requiredValue = false


		homeSMA = @/homePlanet.SemiMajorAxis()
		outerTargetSMA = @/homeSMA * 1.02
		innerTargetSMA = @/homeSMA * 0.98
	}

	DATA
	{
		type = double
		// different for moon home missions / Should be ~10,000 for Kerbin
		rewardMultiplier = 29.8154972929055 * @/rewardBase
		rewardHomeBucks = Round(Pow(2.0 * 0.00000000006674 * HomeWorld().Mass() / (HomeWorld().Radius() + HomeWorld().AtmosphereAltitude()), 0.5)/(20.0 - Min(19.9999, 0.00000000006674 * HomeWorld().Mass() / Pow(HomeWorld().Radius(), 2.0))) * @/rewardMultiplier + 501.0,1000.0)
		rewardBucks = !@/homeIsMoon ? @/rewardHomeBucks : @/rewardHomeBucks + Round(Pow(2.0 * 0.00000000006674 * @/homePlanet.Mass() / (@/homePlanet.Radius() + @/homePlanet.AtmosphereAltitude()), 0.5)/(20.0 - Min(19.9999, 0.00000000006674 * @/homePlanet.Mass() / Pow(@/homePlanet.Radius(), 2.0))) * @/rewardMultiplier,1000.0)
		title = Money in the singular
		requiredValue = false
	}

	DATA
	{

		name = AddBodies
		type = List<CelestialBody>
	

		hidden = true
		requiredValue = false


		ignoreBodies = null
		// no examples to test
		addBarycenters = null
		addSuns = null
		addLocalPlanets = null
		addlocalExtraPlanets = null
		addGasPlanets = null

	}

	DATA
	{

		name = DifficultySettings
		type = double
	

		hidden = true
		requiredValue = false

		rewardBase = 1.0
		// Minimum of 1 to complete using Hohmann transfer if accepting contract at the transfer date
		deadlineHalfOrbits = 5.0
		baseDeviation = 3.0
	}

		DATA
	{
		type = List<CelestialBody>

		hidden = true
		requiredValue = false

		homeMoons = @/homePlanet.Children().Where(cb => cb.IsMoon() && cb != HomeWorld())
		validBodies = AllBodies().Where(cb => (cb.IsPlanet() || cb.IsMoon()) && cb != @/homePlanet && cb.Parent() != @/homePlanet).ExcludeAll(@/ignoreBodies)
		barycenters =  @/validBodies.Where(cb => cb.Name().Contains("Barycenter")  && !cb.Children().ElementAt(0) == @/homeSun).Concat(@/addBarycenters).Exclude(null)
		localPlanetsSuns = @/homeSun.Children().Where(cb => cb.IsPlanet() && cb != @/homePlanet && @/validBodies.Contains(cb)).ExcludeAll(@/barycenters)
		// For some suns IsSun is false and IsPlanet is true!
		// a planet with a moon that itself has a moon will be assumed to be a sun
		localExtraSuns = @/localPlanetsSuns.Where(cb => cb.IsSun() || cb.Children().ElementAt(0).Children().Count() > 0 || cb.Children().ElementAt(1).Children().Count() > 0 || cb.Children().ElementAt(2).Children().Count() > 0 || cb.Children().ElementAt(3).Children().Count() > 0 ).Concat(@/addSuns).ExcludeAll(@/barycenters).Exclude(null)

		localPlanets = @/homeSun.Children().Where(cb => @/validBodies.Contains(cb)).ExcludeAll(@/barycenters).ExcludeAll(@/localExtraSuns).ExcludeAll(@/ignoreBodies).Concat(@/addLocalPlanets).Exclude(@/homePlanet).Exclude(null)
//		localPlanets = @/validBodies.Where(cb => cb.Parent() == @/homeSun).ExcludeAll(@/localExtraSuns)
		localMoons = @/validBodies.Where(cb => @/localPlanets.Contains(cb.Parent())).ExcludeAll(@/homeMoons)
		localPlanetsMoons = @/localPlanets.Concat(@/localMoons)

		outerPlanets = @/localPlanets.Where(cb => (cb.SemiMajorAxis() > @/outerTargetSMA))
		outerMoons = @/localMoons.Where(cb => cb.Parent().SemiMajorAxis() > @/outerTargetSMA)
		outerPlanetsMoons = @/outerPlanets.Concat(@/outerMoons)

		innerPlanets = @/localPlanets.ExcludeAll(@/outerPlanets)
		innerMoons = @/localMoons.ExcludeAll(@/outerMoons)
		innerPlanetsMoons = @/innerPlanets.Concat(@/innerMoons)		

		localExtraOuterSuns = @/localExtraSuns.Where(cb => @/outerTargetSMA < cb.SemiMajorAxis())
		localExtraInnerSuns = @/localExtraSuns.Where(cb => @/innerTargetSMA > cb.SemiMajorAxis())

		localExtraBodies = @/validBodies.ExcludeAll(@/localExtraSuns).ExcludeAll(@/localPlanetsMoons).ExcludeAll(@/barycenters)
		localExtraPlanets = @/localExtraBodies.Where(cb => @/localExtraSuns.Contains(cb.Parent())).Concat(@/addlocalExtraPlanets).ExcludeAll(@/barycenters).Exclude(null)
		localExtraMoons = @/localExtraBodies.ExcludeAll(@/localExtraPlanets).Where(cb => @/localExtraSuns.Contains(cb.Parent().Parent()))
		localExtraPlanetsMoons = @/localExtraPlanets.Concat(@/localExtraMoons)

		//This section needs more testing.  Test Pack Galaxies Unbound
		nonlocalBodies = @/validBodies.ExcludeAll(@/localPlanetsMoons).ExcludeAll(@/localExtraSuns).ExcludeAll(@/barycenters)
		nonlocalSuns =  @/nonlocalBodies.Where(cb => cb.IsSun() || @/barycenters.Contains(cb.Parent()))
		nonlocalPlanetsMoons = @/nonlocalBodies.Where(cb => @/nonlocalBodies.Contains(cb.Parent())).ExcludeAll(@/nonlocalSuns)
		nonlocalMoons =  @/nonlocalPlanetsMoons.Where(cb => @/nonlocalPlanetsMoons.Contains(cb.Parent()))
		nonlocalPlanets =  @/nonlocalPlanetsMoons.ExcludeAll(@/nonlocalMoons)

		allExtraPlanetsMoons = @/nonlocalPlanetsMoons.Concat(@/localExtraPlanetsMoons)
		allExtraMoons =  @/nonlocalMoons.Concat(@/localExtraMoons)
		allExtraPlanets = @/nonlocalPlanets.Concat(@/localExtraPlanets)
		allExtraSuns =  @/nonlocalSuns.Concat(@/localExtraSuns)

		allPlanets = @/localPlanets.Concat(@/allExtraPlanets)
		allMoons = @/localMoons.Concat(@/allExtraMoons)
		allPlanetsMoons = @/allPlanets.Concat(@/allMoons)
		allSuns = @/allExtraSuns

		//some planet packs have gas planets with a surface
		allGasPlanets = @/allPlanets.Where(cb => !cb.HasSurface()).Concat(@/addGasPlanets).Exclude(null)
	}	
}