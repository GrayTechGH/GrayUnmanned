// Credit to linuxgurugamer for his Unmanned and Grand Tour Contracts, which this is strongly based off.
// 
// License is CC BY-NC-SA 4.0
// https://creativecommons.org/licenses/by-nc-sa/4.0/

CONTRACT_TYPE
{
	name = GrayTech First Unmanned Landing
	group = GrayTechUnmannedMissions
	genericTitle = Land a probe on another body
	title = Land a probe on the @/targetBody.Name()

	topic = landing
	subject = Srv_@GrayTech:unmannedTarget

	notes = Complete the following:
	synopsis = Launch an unmanned probe and have it land on the @/targetBody.Name()
	completedMessage = You did it! You have landed on the @/targetBody.Name() . Future generations will remember this day.
	minExpiry = 50.0
	maxExpiry = 100.0
	// contract deadline in days.  Default is no deadline.
	deadline = @GrayTech:unmannedTargetTravelTime * @GrayTech:deadlineHalfOrbits
	cancellable = true
	declinable = true
	prestige = Significant
	maxSimultaneous = 1
	rewardScience = 5.0
	rewardReputation = 20.0
	rewardFunds = @advanceFunds * 2.0
	advanceFunds = Round((@GrayTech:rewardBucks + @GrayTech:unmannedLandingBonus) * (1.0 + Random(-0.5, 0.5)), 1000.0)
	sortKey = 210
	
	targetBody = @GrayTech:unmannedTarget

	DATA
	{
		type = string

		hidden = true
		uniquenessCheck = GROUP_ALL
		requiredValue = true

		title = Must of not have previously not completed a landing mission for this body
		uid = GrayTech First Unmanned Landing:@GrayTech:unmannedTarget.Name()
	}

	REQUIREMENT
	{
		name = ReachSpace
		type = ReachSpace
	}
	REQUIREMENT
	{
		name = HasSurface
		type = Expression
		
		title = Target body must have a surface
		expression = @/targetBody.HasSurface()
	}
	
	// If we've landed, then no need to land again 
	REQUIREMENT
	{
		name = Nolanding
		type = Landing
		targetBody = @/targetBody
		invertRequirement = true
	}
	
	// Make sure they did a flyby first
	REQUIREMENT
	{
		name = FlyBy
		type = FlyBy
	}
	
	PARAMETER
	{
		name = VPG
		type = VesselParameterGroup

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}	
			
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			completeInSequence = true
			disableOnStateChange = true
		}
	}
}
