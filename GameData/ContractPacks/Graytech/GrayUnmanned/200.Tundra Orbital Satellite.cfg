// Credit to linuxgurugamer for his Unmanned and Grand Tour Contracts, which this is strongly based off.
// 
// License is CC BY-NC-SA 4.0
// https://creativecommons.org/licenses/by-nc-sa/4.0/

CONTRACT_TYPE
{
	name = GrayTech Tundra Orbital Satellite
 	group = GrayTechUnmannedMissions
	genericTitle = Put a probe in a Tundra orbit around another body
 	title = Orbit the first satellite in a Tundra orbit around @/targetBody.Name()
  
 	topic = satellites
 	subject = @/targetBody.Name()
 
 	notes = Complete the following:
 	synopsis = Put a satellite in a Tundra orbit around @/targetBody.Name()
 	completedMessage = You did it! We've placed a satellite in Tundra orbit around @/targetBody.Name() .  This will be a day long remembered.
 	cancellable = true
 	declinable = true
 	prestige = Significant
 	deadline = @GrayTech:tundraTargetTravelTime * @GrayTech:deadlineHalfOrbits
	maxSimultaneous = 1
 	rewardScience = 5.0
 	rewardReputation = 15.0
	rewardFunds = @advanceFunds * 3.0
	advanceFunds = Round(@GrayTech:rewardBucks * (1.2 + Random(-0.4, 0.4)), 1000.0)
	sortKey = 200

 	targetBody = @GrayTech:tundraTarget

 	REQUIREMENT
 	{
 		name = ReachSpace
 		type = ReachSpace
 	}

 	// Make sure they did a flyby first
 	REQUIREMENT
 	{
 		name = FlyBy
 		type = FlyBy
 	}
 	
 	REQUIREMENT
	{
 		name = ValidTarget
 		type =  Expression
		title = Valid taget must be available
		
		expression = @/targetBody != @GrayTech:homeSun && @/targetBody.CanHaveTundraOrbit()
 	}
  	DATA
 	{
 		type = string
 
 		hidden = false
 		uniquenessCheck = GROUP_ALL
 		requiredValue = true
 
		title = Must of not have previously not completed tundra orbit mission for this body
 		uid = GrayTech Tundra Orbital Satellite:@GrayTech:tundraTarget.Name()
 	}
 
	PARAMETER
 	{
 		name = VPG
 		type = VesselParameterGroup
 		define = Satellite
 		PARAMETER
 		{
 			name = HasCrew
 			type = HasCrew
 			maxCrew = 0
 			minCrew = 0
 		}
 		PARAMETER
 		{
 			name = TundraOrbit
 			type = ReachSpecificOrbit
 			index = 0
 			deviationWindow = @GrayTech:baseDeviation
 		}
 	}
 	BEHAVIOUR
 	{
 		name = TundraOrbitGenerator
 		type = OrbitGenerator
 
 		RANDOM_ORBIT
 		{
 			targetBody = @GrayTech:tundraTarget.CanHaveTundraOrbit() ? @GrayTech:tundraTarget : @GrayTech:tundraBodies.ElementAt(0)
 			type = TUNDRA
 		}
 	}
}
 