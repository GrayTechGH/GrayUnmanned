// Credit to linuxgurugamer for his Unmanned and Grand Tour Contracts, which this is strongly based off.
// 
// License is CC BY-NC-SA 4.0
// https://creativecommons.org/licenses/by-nc-sa/4.0/

CONTRACT_TYPE
{
	name = GrayTech First Impact
	group = GrayTechUnmannedMissions
	genericTitle = crash a probe on a body
	title = crash a probe on @/targetBody.Name()
	
	topic = crash
	subject = @/targetBody.Name()
	
	notes = Complete the following:
	synopsis = Launch an unmanned probe and have it crash onto the @/targetBody.Name()
	completedMessage = Future generations will remember this day.

	minExpiry = 50.0
	maxExpiry = 100.0
	// contract deadline in days.  Default is no deadline.
	deadline = @GrayTech:unmannedTargetTravelTime * @GrayTech:deadlineHalfOrbits
	cancellable = true
	declinable = true
	prestige = Significant
	maxSimultaneous = 1
	rewardScience = 5.0
	rewardReputation = 10.0
	rewardFunds = @/advanceFunds * 2.0
	advanceFunds = Round(@GrayTech:rewardBucks * (1.0 + Random(-0.2, 0.2)), 1000.0)
	sortKey = 140
	
	targetBody = @GrayTech:unmannedTarget

	REQUIREMENT
	{
		name = ReachSpace
		type = ReachSpace
	}

	// Make sure they did a flyby first
	REQUIREMENT
	{
		name = FlyBy
		type = FlyBy
	}

	REQUIREMENT
	{
		name = HasSurface
		type = Expression
		
		title = Target body must have a surface
		expression = @/targetBody.HasSurface() && !@GrayTech:allGasPlanets.Contains(@/targetBody)
	}
		
	// If we've landed, then no need to crash a probe into it
	REQUIREMENT
	{
		name = Nolanding
		type = Landing

		invertRequirement = true
	}

	DATA
	{
		type = string
		
		hidden = false
		uniquenessCheck = GROUP_ALL
		requiredValue = true

		title = Must of not have previously not completed impact mission for this body
		uid = GrayTech First Impact:@GrayTech:unmannedTarget.Name()
	}

	PARAMETER
	{
		name = VPG_2
		type = VesselParameterGroup

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}	
		PARAMETER
		{
			name = ReachState
			type = ReachState

			// Minimum and maximum altitudes.
			minAltitude = 0
			maxAltitude = 75000

			// Minimum and maximum speeds
			minSpeed = 250
			maxSpeed = 5000
		}
		PARAMETER
		{
			name = VesselDestroyed
			type = VesselDestroyed
			mustImpactTerrain = true
			completeInSequence = true
		}
	}
}
