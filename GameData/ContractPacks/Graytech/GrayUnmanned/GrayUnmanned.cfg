// Credit to linuxgurugamer for his Unmanned and Grand Tour Contracts, which this is strongly based off.
// 
// License is CC BY-NC-SA 4.0
// https://creativecommons.org/licenses/by-nc-sa/4.0/

@CONTRACT_GROUP[GrayTech]:After[GrayTech]
{
	// can't refernce values in subgroups, only in contracts
	DATA		
 	{
 		type = bool
		hidden = true
		requiredValue = false

 		moonsReached = @/homeMoons.Count() > 0 ? (@/homeMoons.Count() > @/homeMoons.ExcludeAll(ReachedBodies()).Count()) : true
 		// medium may be easy bodies2 beacuse medium may be easy bodies
 		mediumBodiesReached = @/mediumBodies2.Count() > 0 ? (@/mediumBodies2.Count() > @/mediumBodies2.ExcludeAll(ReachedBodies()).Count()) : true
 		//hardBodiesReached = @/hardBodies2.Count() > 0 ? (@/hardBodies2.Count() > @/hardBodies2.ExcludeAll(ReachedBodies()).Count()) : true
 	}	
DATA
	{
		type = double
		hidden = true
		requiredValue = false

	// Converted to meters
		unmannedHohmannGM = @/unmannedHohmannBody.Mass() * 0.00000000006674
		synchronousHohmannGM = @/synchronousHohmannBody.Mass() * 0.00000000006674
		tundraHohmannGM = @/tundraHohmannBody.Mass() * 0.00000000006674
		kolniyaHohmannGM = @/kolniyaHohmannBody.Mass() * 0.00000000006674
	
		hardOuterTargetSMA = @/homeSMA * 1.55
		hardInnerTargetSMA = @/homeSMA * 0.66
	
		unmannedTargetSMA = @/unmannedHohmannBody.Children().Contains(@/unmannedTarget) ? @/unmannedTarget.SemiMajorAxis() : @/unmannedHohmannBody.Children().Contains(@/unmannedTarget.Parent()) ? @/unmannedTarget.SemiMajorAxis() + @/unmannedTarget.Parent().SemiMajorAxis(): @/unmannedHohmannBody.Children().Contains(@/unmannedTarget.Parent().Parent()) ? @/unmannedTarget.SemiMajorAxis() + @/unmannedTarget.Parent().SemiMajorAxis() + @/unmannedTarget.Parent().Parent().SemiMajorAxis() : @/unmannedTarget.SemiMajorAxis() + @/unmannedTarget.Parent().SemiMajorAxis() + @/unmannedTarget.Parent().Parent().SemiMajorAxis() + @/unmannedTarget.Parent().Parent().Parent().SemiMajorAxis()
		synchronousTargetSMA = (@/synchronousTarget == @/unmannedTarget) ? @/unmannedTargetSMA : @/synchronousHohmannBody.Children().Contains(@/synchronousTarget) ? @/synchronousTarget.SemiMajorAxis() : @/synchronousHohmannBody.Children().Contains(@/synchronousTarget.Parent()) ? @/synchronousTarget.SemiMajorAxis() + @/synchronousTarget.Parent().SemiMajorAxis() : @/synchronousHohmannBody.Children().Contains(@/synchronousTarget.Parent().Parent()) ? @/synchronousTarget.SemiMajorAxis() + @/synchronousTarget.Parent().SemiMajorAxis() + @/synchronousTarget.Parent().Parent().SemiMajorAxis() : @/synchronousTarget.SemiMajorAxis() + @/synchronousTarget.Parent().SemiMajorAxis() + @/synchronousTarget.Parent().Parent().SemiMajorAxis() + @/synchronousTarget.Parent().Parent().Parent().SemiMajorAxis()
		tundraTargetSMA = (@/tundraTarget == @/unmannedTarget) ? @/unmannedTargetSMA : @/tundraHohmannBody.Children().Contains(@/tundraTarget) ? @/tundraTarget.SemiMajorAxis() : @/tundraHohmannBody.Children().Contains(@/tundraTarget.Parent()) ? @/tundraTarget.SemiMajorAxis() + @/tundraTarget.Parent().SemiMajorAxis() : @/tundraHohmannBody.Children().Contains(@/tundraTarget.Parent().Parent()) ? @/tundraTarget.SemiMajorAxis() + @/tundraTarget.Parent().SemiMajorAxis() + @/tundraTarget.Parent().Parent().SemiMajorAxis() : @/tundraTarget.SemiMajorAxis() + @/tundraTarget.Parent().SemiMajorAxis() + @/tundraTarget.Parent().Parent().SemiMajorAxis() + @/tundraTarget.Parent().Parent().Parent().SemiMajorAxis()
		kolniyaTargetSMA = (@/kolniyaTarget == @/unmannedTarget) ? @/unmannedTargetSMA : @/kolniyaHohmannBody.Children().Contains(@/kolniyaTarget) ? @/kolniyaTarget.SemiMajorAxis() : @/kolniyaHohmannBody.Children().Contains(@/kolniyaTarget.Parent()) ? @/kolniyaTarget.SemiMajorAxis() + @/kolniyaTarget.Parent().SemiMajorAxis() : @/kolniyaHohmannBody.Children().Contains(@/kolniyaTarget.Parent().Parent()) ? @/kolniyaTarget.SemiMajorAxis() + @/kolniyaTarget.Parent().SemiMajorAxis() + @/kolniyaTarget.Parent().Parent().SemiMajorAxis() : @/kolniyaTarget.SemiMajorAxis() + @/kolniyaTarget.Parent().SemiMajorAxis() + @/kolniyaTarget.Parent().Parent().SemiMajorAxis() + @/kolniyaTarget.Parent().Parent().Parent().SemiMajorAxis()

		unmannedHomeSMA = (@/unmannedHohmannBody == @/homePlanet) ? 0.0 : (@/unmannedHohmannBody == @/homeSun) ? @/homePlanet.SemiMajorAxis() : @/homeSun.SemiMajorAxis()
		synchronousHomeSMA = (@/synchronousTarget == @/unmannedTarget) ? @/unmannedHomeSMA : (@/synchronousHohmannBody == @/homePlanet) ? 0.0 : (@/synchronousHohmannBody == @/homeSun) ? @/homePlanet.SemiMajorAxis() : @/homeSun.SemiMajorAxis()
		tundraHomeSMA = (@/tundraTarget == @/unmannedTarget) ? @/unmannedHomeSMA : (@/tundraHohmannBody == @/homePlanet) ? 0.0 : (@/tundraHohmannBody == @/homeSun) ? @/homePlanet.SemiMajorAxis() : @/homeSun.SemiMajorAxis()
		kolniyaHomeSMA = (@/kolniyaTarget == @/unmannedTarget) ? @/unmannedHomeSMA : (@/kolniyaHohmannBody == @/homePlanet) ? 0.0 : (@/kolniyaHohmannBody == @/homeSun) ? @/homePlanet.SemiMajorAxis() : @/homeSun.SemiMajorAxis()

		unmannedTargetTravelTime = 3.14 * Pow(Pow(@/unmannedHomeSMA + @/unmannedTargetSMA, 3.0)/(8.0 * @/unmannedHohmannGM),0.5) /(3600.0 * 6.0) + 10.07
		synchronousTargetTravelTime = (@/synchronousTarget == @/unmannedTarget) ? @/unmannedTargetTravelTime : 3.14 * Pow(Pow(@/synchronousHomeSMA + @/synchronousTargetSMA, 3.0)/(8.0 * @/synchronousHohmannGM),0.5) /(3600.0 * 6.0) + 10.07
		tundraTargetTravelTime = (@/tundraTarget == @/unmannedTarget) ? @/unmannedTargetTravelTime : 3.14 * Pow(Pow(@/tundraHomeSMA + @/tundraTargetSMA, 3.0)/(8.0 * @/tundraHohmannGM),0.5) /(3600.0 * 6.0) + 10.07
		kolniyaTargetTravelTime = (@/kolniyaTarget == @/unmannedTarget) ? @/unmannedTargetTravelTime : 3.14 * Pow(Pow(@/kolniyaHomeSMA + @/kolniyaTargetSMA, 3.0)/(8.0 * @/kolniyaHohmannGM),0.5) /(3600.0 * 6.0) + 10.07

		unmannedLandingBonus = Round(Pow(2.0 * 0.00000000006674 * @/unmannedTarget.Mass() / (@/unmannedTarget.Radius() + @/unmannedTarget.AtmosphereAltitude()), 0.5)/(20.0 - Min(19.9999, 0.00000000006674 * @/unmannedTarget.Mass() / Pow(@/unmannedTarget.Radius(), 2.0))) * @/rewardMultiplier,1000.0)
	}
	DATA:NEEDS[Strategia]
	{
		type = StrategiaStrategy
		requiredValue = false
		strategy = ActiveStrategies().Where(s => s.contractType() == "STG_BodyProbes").First()
	}
	DATA:NEEDS[Strategia]
	{
		type = List<CelestialBody>
		hidden = true
		requiredValue = false
 		strategyList1 = @/strategy.targetBody()
 		strategyList2 = (@/unmannedSelection1.Count() > 3) ? (@/unmannedSelection1.Count() > 7) ? @/strategyList1.Concat(@/strategyList1).Concat(@/strategyList1)	 : @/strategyList1.Concat(@/strategyList1) : @/strategyList1
 		strategyList3 = (@/unmannedSelection1.Count() > 15) ? @/strategyList2.Concat(@/strategyList2) : @/strategyList2

		unmannedSelection = @/unmannedSelection1.Concat(@/strategyList3).Exclude(null)
	}
	DATA:NEEDS[!Strategia]
	{
		type = List<CelestialBody>
		hidden = true
		requiredValue = false

		unmannedSelection = @/unmannedSelection1
	}

	DATA	
	{
		type = CelestialBody
		hidden = true
		requiredValue = false

		unmannedTarget1 = @/unmannedSelection.Random()
		//  null selected results in stange behaivor
		unmannedTarget = (@/unmannedTarget1.SemiMajorAxis() > 0) ? @/unmannedTarget1 : @/homeSun
		synchronousTarget1 = @/unmannedTarget.CanHaveSynchronousOrbit(0.05) ? @/unmannedTarget : @/synchronousBodies.Where(cb => @/unmannedSelection.Contains(cb)).Random()
		synchronousTarget = (@/synchronousTarget1.SemiMajorAxis() > 0) ? @/synchronousTarget1 : @/homeSun
		tundraTarget1 =  @/unmannedTarget.CanHaveTundraOrbit() ? @/unmannedTarget : @/tundraBodies.Where(cb => @/unmannedSelection.Contains(cb)).Random()
		tundraTarget = (@/tundraTarget1.SemiMajorAxis() > 0) ? @/tundraTarget1 : @/homeSun
		kolniyaTarget1 =  @/unmannedTarget.CanHaveKolniyaOrbit() ? @/unmannedTarget : @/kolniyaBodies.Where(cb => @/unmannedSelection.Contains(cb)).Random()
		kolniyaTarget = (@/kolniyaTarget1.SemiMajorAxis() > 0) ? @/kolniyaTarget1 : @/homeSun
		
		unmannedHohmannBody = @/homeMoons.Contains(@/unmannedTarget) ? @/homePlanet : @/localPlanetsMoons.Contains(@/unmannedTarget) ? @/homeSun : @/homeSun.Parent()
	
		// Don't test unmannedTarget match.  Circular dependency
		synchronousHohmannBody = @/homeMoons.Contains(@/synchronousTarget) ? @/homePlanet : @/localPlanetsMoons.Contains(@/synchronousTarget) ? @/homeSun : @/homeSun.Parent()
		tundraHohmannBody  = @/homeMoons.Contains(@/tundraTarget) ? @/homePlanet : @/localPlanetsMoons.Contains(@/tundraTarget) ? @/homeSun : @/homeSun.Parent()
		kolniyaHohmannBody = @/homeMoons.Contains(@/kolniyaTarget) ? @/homePlanet : @/localPlanetsMoons.Contains(@/kolniyaTarget) ? @/homeSun : @/homeSun.Parent()
	}
	DATA
	{
		type = List<CelestialBody>
		hidden = true
		requiredValue = false

		unreachedBodies = AllBodies().ExcludeAll(ReachedBodies())
		easyBodies = @/homeIsMoon? @/homeMoons.Add(@/homePlanet) : @/homeMoons

		mediumBodies1 = @/localPlanets.Where(cb => cb.SemiMajorAxis() < @/hardOuterTargetSMA && cb.SemiMajorAxis() > @/hardInnerTargetSMA)
		mediumBodies2 = @/mediumBodies1.Concat(@/localMoons.Where(cb => @/mediumBodies1.Contains(cb.Parent())))
		mediumBodies = (@/moonsReached && @/mediumBodies2.Count() > 0) ? @/mediumBodies2 : @/easyBodies
		
		hardBodies1 = @/allPlanets.ExcludeAll(@/easyBodies).ExcludeAll(@/mediumBodies).Concat(@/localExtraSuns)
		hardBodies2 = @/hardBodies1.Concat(@/allMoons.Where(cb => @/hardBodies1.Contains(cb.Parent()))).ExcludeAll(@/easyBodies).ExcludeAll(@/mediumBodies)
		hardBodies = @/mediumBodiesReached && @/hardBodies2.Count() > 0 ? @/hardBodies2 : @/mediumBodies
	
		synchronousBodies = @/validBodies.Where(cb => cb.CanHaveSynchronousOrbit(0.05))
		tundraBodies = @/validBodies.Where(cb => cb.CanHaveTundraOrbit())
		kolniyaBodies = @/validBodies.Where(cb => cb.CanHaveKolniyaOrbit())

		unmannedSelection1 = (Prestige() ==  Exceptional && @/hardBodies.Count() > 0) ? @/hardBodies :  ((Prestige() ==  Significant || Prestige() ==  Exceptional) && @/mediumBodies.Count() > 0) ? @/mediumBodies : @/easyBodies
	}

	CONTRACT_GROUP
	{
		name = GrayTechUnmannedMissions
		agent = Gray Unmanned
		minVersion = 1.28
		// Name of the contract group
		displayName = Unmanned Missions
		sortKey = 101
		maxSimultaneous = 20
	}

}
