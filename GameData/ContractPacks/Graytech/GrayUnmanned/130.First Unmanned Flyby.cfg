// Credit to linuxgurugamer for his Unmanned and Grand Tour Contracts, which this is strongly based off.
// 
// License is CC BY-NC-SA 4.0
// https://creativecommons.org/licenses/by-nc-sa/4.0/

CONTRACT_TYPE
{
// For debugging
//trace = true
	name = GrayTech First Unmanned Flyby
	group = GrayTechUnmannedMissions
	genericTitle = Do an unmanned flyby
	title = Perform an unmanned @/targetBody.Name() flyby mission.

	topic = flyby
	subject = @/targetBody.Name()

	notes = Complete the following:
	synopsis = Send a probe to space to @/targetBody.Name() with a minimum altitude of @/targetAltitudeScaled @/altitudeUnits.ElementAt(@/targetScale)
	completedMessage = You did it! We've sent a probe on a @/targetBody.Name() flyby
	cancellable = true
	declinable = true
	prestige = Significant
	deadline = @GrayTech:unmannedTargetTravelTime * @GrayTech:deadlineHalfOrbits
	maxSimultaneous = 3
	rewardScience = 5.0
	rewardReputation = 5.0
	rewardFunds = @advanceFunds * 2.0
	advanceFunds = Round(@GrayTech:rewardBucks * (1.0 + Random(-0.2, 0.2)), 1000.0)
	sortKey = 130

	targetBody = @GrayTech:unmannedTarget
	
	DATA
	{
		type = double
		hidden = true
		requiredValue = true

		targetAltitude = Max(@/targetBody.SpaceAltitudeThreshold() / 2.0, @/targetBody.Radius() / 10.0 + @/targetBody.AtmosphereAltitude())
	}
	DATA
	{
		type = int
		hidden = true
		requiredValue = true

		targetAltitudeScaled = @/targetAltitude / (@/targetAltitude >= 10000 ? @/targetAltitude >= 10000000 ? 1000000 : 1000 : 1)
		targetScale = @/targetAltitude >= 10000 ? @/targetAltitude >= 10000000 ? 2 : 1 : 0
	}
	DATA	
	{
		type = List<string>
		hidden = true
		requiredValue = true

		altitudeUnits = ["m", "km", "Mm"]
	}
	
	REQUIREMENT
	{
		name = ReachSpace
		type = ReachSpace
	}
	
	// Make sure they did not do a flyby first
	REQUIREMENT
	{
		name = FlyBy
		type = FlyBy
		
		invertRequirement = true
	}

	DATA
	{
		type = string
		hidden = false
		uniquenessCheck = GROUP_ALL
		requiredValue = true

		title = Must of not have previously not completed fly by mission for this body
		uid = GrayTech Unmanned Flyby:@GrayTech:unmannedTarget.Name()
	}

	REQUIREMENT
	{
		name = Orbit
		type = Orbit
		
		targetBody = @GrayTech:homePlanet
	}

	PARAMETER
	{
		name = Sequence_1
		type = Sequence
		title = Flyby @/targetBody

		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			completeInSequence = true

			PARAMETER
			{
				name = HasCrew
				type = HasCrew

				maxCrew = 0
				minCrew = 0
			}
			PARAMETER
			{
				name = ReachStateLowSpace
				type = ReachState

				// get low in space
				maxAltitude = @/targetAltitude
				targetBody = @/targetBody
			}
			PARAMETER
			{
				name = ReachStateEscaping
				type = ReachState
	
				situation = ESCAPING
				targetBody = @/targetBody
			}
		}
	}
}
